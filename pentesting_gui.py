import tkinter as tk
from tkinter import messagebox
import subprocess
import os

# Fonction pour exécuter un outil de pentesting
def run_tool(tool):
    try:
        output_text.delete(1.0, tk.END)  # Effacer la sortie précédente

        # Dictionnaire des commandes pour chaque outil
        commands = {
            'sqlmap': ['sqlmap', '-u', 'http://testphp.vulnweb.com', '--batch'],
            'wpscan': ['wpscan', '--url', 'http://testphp.vulnweb.com'],
            'nmap': ['nmap', 'http://testphp.vulnweb.com'],
            'commix': ['commix', '-u', 'http://testphp.vulnweb.com'],
            'gobuster': ['gobuster', 'dir', '-u', 'http://testphp.vulnweb.com', '-w', '/usr/share/wordlists/dirb/common.txt'],
            'nikto': ['nikto', '-h', 'http://testphp.vulnweb.com'],
            'masscan': ['masscan', '-p1-65535', '127.0.0.1', '--rate=1000'],
            'arachni': ['arachni', 'http://testphp.vulnweb.com']
        }

        # Exécution de l'outil choisi
        result = subprocess.run(commands[tool], capture_output=True, text=True)

        # Affichage du résultat dans la zone de texte
        output_text.insert(tk.END, result.stdout)

        # Enregistrer les résultats dans un fichier de rapport
        with open("rapport.txt", "a") as file:
            file.write(f"Résultats de {tool} :\n")
            file.write(result.stdout + "\n\n")

    except Exception as e:
        messagebox.showerror("Erreur", f"Erreur lors de l'exécution : {e}")

# Fenêtre principale de l'application
root = tk.Tk()
root.title("Interface de Pentesting")
root.geometry("600x400")

# Zone de texte pour afficher les résultats
output_text = tk.Text(root, height=10, width=70)
output_text.pack(pady=20)

# Boutons pour chaque outil
tools = ['sqlmap', 'wpscan', 'nmap', 'commix', 'gobuster', 'nikto', 'masscan', 'arachni']
for tool in tools:
    btn = tk.Button(root, text=f"Lancer {tool.capitalize()}", command=lambda t=tool: run_tool(t))
    btn.pack(pady=10)

# Lancer l'application
root.mainloop()
